;;*********************************************************;
;----------------------------------------------------------;
; NAME: IDLE.EQU
;-----------------------------------------------------------------------;
; Copyright (C) 1990 Digital Research Inc.  All rights reserved.
;-----------------------------------------------------------------------;
ALL_INTS		equ	00000000b
KBD_INT_MASK		equ	11111101b
READ_RTC		equ	2h	; read RTC ROS function handle.
SET_TIME		equ	2dh	; set RTC DOS function handle.
TIMER_INT_MASK		equ	11111110b
TIMER_0_REG		equ	040h	; first counter timer port
TIMER_1_REG		equ	041h
TIMER_2_REG		equ	042h
TIMER_CMND_REG		equ	04dh	; command port

; Error codes generated by device driver processing on IDLE86.ASM.
INVALID_CMD		equ	8103h	; invalid device driver command
OUTPUT_ERR		equ	810Ah	; error during dd_output
INVALID_FUNCTION	equ	81h

; Interrupt service routine numbers.
TIMER_INT		equ	8h	; timer tick int 8h ISR number
USER_INT		equ	1ch	; user tick int
RTC_INT			equ	1ah	; time of day services

; Equates associated with $idle$ Idle State Data Area.
DD_OUT_COUNT		equ	4	; expected value in COUNT field.
IDLE_COMMAND		equ	0001h	; Command Processor Active
IDLE_DOSFUNC		equ	0002h	; DOS Function Called
IDLE_INT28		equ	0004h	; INT28 Called

; Data offsets in Idle State Data Area. BDOS defines a 20-byte area,
; with the last 4 bytes for private use by the driver.
IDLE_COUNT		equ	word ptr 00[di]
IDLE_MAX		equ	word ptr 02[di]
IDLE_FLAGS		equ	word ptr 04[di]
IDLE_DRIVER		equ	dword ptr 06[di]
IDLE_DRIVER_OFF		equ	word ptr 06[di]
IDLE_DRIVER_SEG		equ	word ptr 08h[di]
INT28_DELAY		equ	word ptr 0Ah[di]
INT28_RELOAD		equ	word ptr 0Ch[di]
IDLE_INDOS		equ	word ptr 0Eh[di]
; The last two words are specific to this driver (not used by BDOS).
IDLE_CNTDN		equ	word ptr 10h[di]
IDLESTAT_ID		equ	word ptr 12h[di]

IDLE_MAX_DEF		equ	5	; default setting
INT28_RELOAD_DEF	equ	5	; default setting

IDLE_ON			equ	4000h	; Set when Idle Checking Enabled
IDLE_INIT		equ	8000h	; Cleared when $IDLE$ Initialized
IDLE_ENABLE		equ	IDLE_INIT + IDLE_ON

; $IDLE$ function handles.
PROC_IDLE		equ	1	; current process idle
PROC_INT28		equ	2	; current process idle via INT28
PROC_KEYIN		equ	3	; keyboard read function imminent
PROC_DEVIN		equ	4	; device read function imminent
